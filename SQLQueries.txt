-Insertion:
Insert tuples into the Has_Manager Table: 
    INSERT
    INTO Has_Manager
    VALUES(123, "Huang's Marriage.Co","Steven Huang","Patrick Huang",20	")

-Update:
Update values in the Customer_advises Table:  
    UPDATE
    FROM Customer_advises
    SET Name= Eric Lyu
    WHERE MemberID = 22331

-Delete:
Delete tuples in the Has_Manager Table:  
    Delete
    FROM Has_Manager 
    WHERE ManagerID=123
-Selection:
Select values from the Has_Manager Table: 
    SELECT * 
    FROM Has_Manager
    WHERE workforce > 10

-Projection:
List all Matchmakers' name in MatchMaker_manage
    SELECT name
    FROM MatchMaker_manage

-Join:
Join the Has_Manager table with Matchmaker_manage table and user need to provide an operator and a number to qualify Workforce in the WHERE clause:
    SELECT * 
    FROM Has_Manager H, Matchmaker_manage M 
    WHERE workforce > 10 AND H.ManagerID = M.ManagerID

-Nested aggregation:
Find those occupations for which thier minimum age is strictly below the average of the minimum age over all occupations.
    WITH tmp AS (SELECT Occupation, MIN(Age) AS minage
                FROM Customer_advises  
                GROUP BY Occupation) 
    SELECT tmp.Occupation, tmp.minage
    FROM tmp
    WHERE tmp.minage < (SELECT AVG(tmp.minage) FROM tmp)

-Division:
Find the name of the MSCs(Marriage Service Coorperations) that has all the managers.
    SELECT mmsc.Name_MSC
    FROM Manage_MSC mmsc 
    WHERE NOT EXISTS 
      ((SELECT hm.ManagerID 
        FROM Has_Manager hm) 
        MINUS
      (SELECT hm2.ManagerID
        FROM Has_Manager hm2 
        WHERE hm2.Name_MSC = mmsc.Name_MSC AND hm2.CEO = mmsc.CEO));

-Aggregation with Group By:
Find the maximum age for each occupation in Customer_advises table: 
    SELECT Occupation,MAX(age) AS maxage
    FROM Customer_advises 
    GROUP BY Occupation
     
-Aggregation with Having
Find the maximum age for each occupation only for those occupations that have at least 2 tuples in Customer_advises table:
    SELECT Occupation,MAX(age) AS maxage
    FROM Customer_advises 
    GROUP BY Occupation
    HAVING COUNT(*)>1
